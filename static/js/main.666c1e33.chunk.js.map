{"version":3,"sources":["Components/Menu/MenuItem/MenuItem.module.css","Components/Menu/Menu.module.css","Components/Cart/CartItem/CartItem.module.css","UI/Backdrop/Backdrop.module.css","Components/Header/CartButton/CartButton.module.css","Components/Header/Header.module.css","UI/Card/Card.module.css","Components/Menu/MenuItem/MenuItemAdd/MenuItemAdd.module.css","Components/Cart/CartItem/CartItemAdjust/CartItemAdjust.module.css","Components/Cart/Cart.module.css","Components/RestaurantDescription/RestaurantDescription.module.css","Context/cart-triggered-context.js","Components/Header/CartButton/CartButton.js","Components/Header/Header.js","Components/Header/DangoTea.jpg","Context/cart-inside-context.js","Components/Menu/MenuItem/MenuItemAdd/MenuItemAdd.js","Components/Menu/MenuItem/MenuItem.js","Components/Menu/Menu.js","Components/Cart/CartItem/CartItemAdjust/CartItemAdjust.js","Components/Cart/CartItem/CartItem.js","Components/Cart/Cart.js","Components/RestaurantDescription/RestaurantDescription.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","CartContext","React","createContext","cartStatus","setCartStatus","CartContextProvider","props","useState","cartValue","Provider","value","children","CartButton","cartCtx","useContext","Button","variant","color","onClick","size","startIcon","Header","headerTitle","headerSize","cartButtonSize","useMediaQuery","AppBar","position","Toolbar","Grid","container","justify","alignItems","item","xs","Typography","component","noWrap","CartInsideContext","Total","CartListArray","setCartListArray","CurrentItem","setCurrentItem","addItemToCart","CartInsideContextProvider","totalState","setTotalState","cartListArrayState","setCartListArrayState","cartOrderNumberState","setCartOrderNumberState","updateTotalFunc","newArray","newTotal","reduce","totalSum","Price","Quantity","cartInsideValues","currentItemName","currentItemPrice","currentItemQuantity","existingCartEntry","find","Name","newQuantity","Number","newCartItem","OrderNumber","prevNumber","prevCartList","newCartlist","cartMinusFunc","itemOrderNumber","cartChangeIndex","findIndex","cartOrder","orderIndex","arrayCopy","clonedArray","JSON","parse","stringify","splice","console","log","cartPlusFunc","updateTotal","orderSubmitFunc","map","cartItem","alert","MenuItemAdd","quantityRef","useRef","onSubmit","event","preventDefault","inputItemQuantity","current","MenuItemName","MenuItemPrice","TextField","id","type","InputProps","inputProps","min","max","fullWidth","label","InputLabelProps","shrink","inputRef","MenuItem","isScreenBig","className","styles","MenuItemContainer","ItemInfoContainer","MenuItemTitle","MenuItemDesc","SpaceBox","Menu","menuListArray","setMenuListArray","useEffect","readyArray","menuItem","Box","m","p","Paper","width","mx","align","MenuList","CartItemAdjust","ButtonGroup","IconButton","cartItemKey","aria-label","CartItem","priceEachString","quantityString","totalPriceString","Card","CardContent","sm","display","spacing","QuantityBox","CartCard","CartList","justifyContent","Cart","cartStyles","top","left","Modal","style","open","onClose","RestaurantDescription","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.666c1e33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuItemContainer\":\"MenuItem_MenuItemContainer__2XCKa\",\"ItemInfoContainer\":\"MenuItem_ItemInfoContainer__UK7X5\",\"SpaceBox\":\"MenuItem_SpaceBox__2ClAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuList\":\"Menu_MenuList__1LW9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuItemContainer\":\"CartItem_MenuItemContainer__2Dk5f\",\"ItemInfoContainer\":\"CartItem_ItemInfoContainer__3eKR3\",\"SpaceBox\":\"CartItem_SpaceBox__3nYBa\",\"QuantityBox\":\"CartItem_QuantityBox__2yJtx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__3sd-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CartButtonBox\":\"CartButton_CartButtonBox__1FHze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderContainer\":\"Header_HeaderContainer__163sn\",\"HeaderTitle\":\"Header_HeaderTitle__1K4vS\",\"HeaderImage\":\"Header_HeaderImage__2Z8tD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__b7d4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuAddBox\":\"MenuItemAdd_MenuAddBox__1ZoHv\",\"LabelBox\":\"MenuItemAdd_LabelBox__21_sq\",\"NumberBox\":\"MenuItemAdd_NumberBox__z3aU3\",\"SubmitButton\":\"MenuItemAdd_SubmitButton__1SjfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CartItemAdjustBox\":\"CartItemAdjust_CartItemAdjustBox__apvF6\",\"MinusButton\":\"CartItemAdjust_MinusButton__1GAS4\",\"PlusButton\":\"CartItemAdjust_PlusButton__3xb1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartContainer\":\"Cart_cartContainer__1dTu7\",\"OrderSubmitButton\":\"Cart_OrderSubmitButton__1ofRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"a\":\"RestaurantDescription_a__doMIm\"};","import React, { useState } from 'react'\n\nexport const CartContext = React.createContext(\n\n    {\n        cartStatus:false,\n        setCartStatus: () => {},\n    }\n);\n\n\nconst CartContextProvider = props =>{\n\n    const [cartTriggered, setCartTriggered] =useState(false);\n\n    const cartValue = {\n            cartStatus: cartTriggered,\n            setCartStatus: setCartTriggered,\n                     }            \n\n    return(\n    <CartContext.Provider value={cartValue}>\n        {props.children}\n        </CartContext.Provider>\n    )\n}\n\nexport default CartContextProvider;","import { useContext } from \"react\";\n// import Button from '../../../UI/Button/Button';\nimport { Button } from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nimport { CartContext } from \"../../../Context/cart-triggered-context\";\n\nimport styles from \"./CartButton.module.css\";\n\nconst CartButton = (props) => {\n  let cartCtx = useContext(CartContext);\n\n  function openCart() {\n    cartCtx.setCartStatus(true);\n  }\n\n  return (\n    // <Button content=\"Your Cart\" styling={styles.CartButtonBox} clickFunc={openCart} ></Button>\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={openCart}\n      size=\"large\"\n      startIcon={<ShoppingCartIcon/>}\n    >\n      Your Cart\n    </Button>\n  );\n};\n\nexport default CartButton;\n","import { Toolbar, Typography, Grid } from \"@material-ui/core\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport { AppBar } from \"@material-ui/core\";\nimport CartButton from \"./CartButton/CartButton\";\nimport styles from \"./Header.module.css\";\nimport DangoHeader from \"./DangoTea.jpg\";\n\nconst Header = () => {\n\n let isScreenBig = useMediaQuery('(min-width: 800px)');\n let headerTitle=\"\";\n let headerSize=1;\n let cartButtonSize=1;\n\n  if(isScreenBig) {\n    headerTitle=\"Amai: Authentic Japanese Sweets\";\n    headerSize=8;\n    cartButtonSize=2\n\n  }\n  else{\n    headerTitle=\"Amai\";\n    headerSize=6;\n    cartButtonSize=6;\n  }\n\n  return (\n    <AppBar position=\"static\">\n        <Toolbar>\n      {/* // <div className={styles.HeaderContainer}> */}\n      <Grid container justify=\"space-around\" alignItems=\"center\">\n          \n        <Grid item xs={headerSize}>\n          <Typography variant=\"h4\" component=\"h1\" noWrap>\n            {headerTitle}\n          </Typography>\n        </Grid>\n        {/* <h1 className={styles.HeaderTitle}>Amai: Authentic Japanese Sweets</h1> */}\n\n        <Grid item xs={cartButtonSize}>\n          <CartButton />\n        </Grid>\n      </Grid>\n      {/* <img src={DangoHeader} className={styles.HeaderImage} alt=\"\" /> */}\n      {/* </div> */}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/DangoTea.c9388782.jpg\";","import React, { useState } from \"react\";\n\nexport const CartInsideContext = React.createContext({\n  Total: 0,\n  CartListArray: [],\n  setCartListArray: () => {},\n  CurrentItem: {},\n  setCurrentItem: () => {},\n  addItemToCart: () => {},\n});\n\nconst CartInsideContextProvider = (props) => {\n  const [totalState, setTotalState] = useState(0);\n  const [cartListArrayState, setCartListArrayState] = useState([]);\n  const [cartOrderNumberState, setCartOrderNumberState] = useState(0);\n\n  const addItemToCartFunc = (\n    currentItemName,\n    currentItemPrice,\n    currentItemQuantity\n  ) => {\n    if (currentItemQuantity < 1) {\n      return;\n    }\n\n    /**/\n    let existingCartEntry = cartListArrayState.find( item =>{\n      return item.Name == currentItemName\n    });\n    if(existingCartEntry) {\n      let newQuantity=Number(existingCartEntry.Quantity) + (+currentItemQuantity);\n      existingCartEntry.Quantity = newQuantity;\n    return;\n    }\n\n//\n\n    const newCartItem = {\n      OrderNumber: cartOrderNumberState,\n      Name: currentItemName,\n      Price: currentItemPrice,\n      Quantity: currentItemQuantity,\n    };\n\n    setCartOrderNumberState((prevNumber) => {\n      return ++prevNumber;\n    });\n\n    setCartListArrayState((prevCartList) => {\n      let newCartlist = [...prevCartList, newCartItem];\n\n      updateTotalFunc(newCartlist);\n\n      return newCartlist;\n    });\n  };\n\n\n  const removeCartItem = (orderIndex, arrayCopy) => {\n    arrayCopy.splice(orderIndex, 1);\n\n    console.log(\"Array Edited\", arrayCopy);\n\n    return arrayCopy;\n  };\n\n  const decreaseCartItemQuantity = (itemOrderNumber) => {\n    let cartChangeIndex = cartListArrayState.findIndex(\n      (cartOrder) => cartOrder.OrderNumber == itemOrderNumber\n    );\n\n    setCartListArrayState((prevCartList) => {\n      let clonedArray = JSON.parse(JSON.stringify(prevCartList));\n      clonedArray[cartChangeIndex].Quantity--;\n\n      if (clonedArray[cartChangeIndex].Quantity < 1) {\n        updateTotalFunc(clonedArray);\n        return removeCartItem(cartChangeIndex, clonedArray);\n      } else {\n        updateTotalFunc(clonedArray);\n        return clonedArray;\n      }\n    });\n    return;\n  };\n\n  const increaseCartItemQuantity = (itemOrderNumber) => {\n    let cartChangeIndex = cartListArrayState.findIndex(\n      (cartOrder) => cartOrder.OrderNumber == itemOrderNumber\n    );\n\n    setCartListArrayState((prevCartList) => {\n      let clonedArray = JSON.parse(JSON.stringify(prevCartList));\n      clonedArray[cartChangeIndex].Quantity++;\n\n      updateTotalFunc(clonedArray);\n\n      return clonedArray;\n    });\n    return;\n  };\n\n  const updateTotalFunc = (newArray=cartListArrayState) => {\n    let newTotal = newArray.reduce((totalSum, item) => {\n      return totalSum + item.Price * item.Quantity;\n    }, 0);\n\n    setTotalState(newTotal);\n    return;\n  };\n\n  let printOrder = ()=>{\n    cartListArrayState.map((cartItem) => (\n    console.log(`You have ordered: ${cartItem.Quantity} ${cartItem.Name}`)\n  ));\n  console.log(\"Your total cost is PKR \"+totalState)\n  console.log(\"Your order has been submitted\")\n  setCartListArrayState([]);\n  setTotalState(0);\n  alert(\"Order Submitted. Check Console\");\n     };\n\n  const cartInsideValues = {\n    Total: totalState,\n    CartListArray: cartListArrayState,\n    setCartListArray: setCartListArrayState,\n    addItemToCart: addItemToCartFunc,\n    cartMinusFunc: decreaseCartItemQuantity,\n    cartPlusFunc: increaseCartItemQuantity,\n    updateTotal: updateTotalFunc,\n    orderSubmitFunc: printOrder,\n  };\n\n  return (\n    <CartInsideContext.Provider value={cartInsideValues}>\n      {props.children}\n    </CartInsideContext.Provider>\n  );\n};\n\nexport default CartInsideContextProvider;\n","import { useContext, useRef } from \"react\";\n\nimport { CartInsideContext } from \"../../../../Context/cart-inside-context\";\n\nimport { TextField,Button } from \"@material-ui/core\";\n\nimport styles from \"./MenuItemAdd.module.css\";\n\nconst MenuItemAdd = (props) => {\n  const { addItemToCart } = useContext(CartInsideContext);\n\n  const quantityRef = useRef();\n\n  const MenuItemAddFunc = (event) => {\n    event.preventDefault();\n\n    let inputItemQuantity = quantityRef.current.value;\n    // console.log(\"QuantityRef\", quantityRef.current.value);\n\n    addItemToCart(props.MenuItemName, props.MenuItemPrice, inputItemQuantity);\n    quantityRef.current.value = \"\";\n  };\n\n  return (\n    // <form className={styles.MenuAddBox} onSubmit={MenuItemAddFunc}>\n       <form onSubmit={MenuItemAddFunc}>\n      {/* <label className={styles.LabelBox} htmlFor={props.MenuItemName}>\n        {\" \"}\n        <strong>Amount: </strong>{\" \"}\n      </label> */}\n\n      <TextField\n        id={props.MenuItemName}\n        type=\"number\"\n        InputProps= {{inputProps: {min:1, max:30} }}\n        fullWidth={1}\n        label=\"Amount: \"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        variant=\"outlined\"\n        inputRef={quantityRef}\n      />\n\n      {/* <input min=\"1\" max=\"99\" className={styles.NumberBox} type='number' id={props.MenuItemName}  ref={quantityRef} /> */}\n\n      <Button id={props.MenuItemName} variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\">\n        ADD\n        </Button>  \n      {/* <input\n        className={styles.SubmitButton}\n        type=\"submit\"\n        id={props.MenuItemName}\n        value=\"ADD\"\n      /> */}\n    </form>\n  );\n};\n\nexport default MenuItemAdd;\n","\nimport MenuItemAdd from './MenuItemAdd/MenuItemAdd'\n\nimport styles from './MenuItem.module.css'\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { Typography,Card,Box } from '@material-ui/core';\n\nconst MenuItem = props =>{\n\n    let isScreenBig = useMediaQuery('(min-width: 800px)')\n\n\n    return(\n\n\n        <li className={styles.MenuItemContainer}>\n        <div className={styles.ItemInfoContainer}>\n        <Typography variant=\"h6\" component=\"h4\">{props.MenuItemTitle}</Typography>\n        {isScreenBig && <Typography variant=\"caption\">{props.MenuItemDesc}</Typography>}\n        <Typography variant=\"h7\" component=\"h5\">PKR {props.MenuItemPrice} </Typography>\n        </div>\n\n        <div className={styles.SpaceBox}/>\n        \n        <MenuItemAdd MenuItemName={props.MenuItemTitle} MenuItemPrice={props.MenuItemPrice} />\n        \n        </li>\n\n    )\n};\n\nexport default MenuItem;","import CardNew from \"./../../UI/Card/Card\";\nimport {Grid,Typography,Container, Box,Paper,Card} from \"@material-ui/core\"\nimport MenuItem from \"./MenuItem/MenuItem\";\n\nimport styles from \"./Menu.module.css\";\nimport { useEffect, useState } from \"react\";\n\nconst Menu = () => {\n\n  const [menuListArray, setMenuListArray] = useState([]);\n\n  useEffect(()=>{\n\n    setMenuListArray([\n      {\n        MenuItemTitle:\"Dango\",\n        MenuItemDesc:\"a small, sticky, sweet dumpling, commonly skewered on a stick\",\n        MenuItemPrice:\"30\",\n      },\n  \n      {\n        MenuItemTitle:\"Kompeito\",\n        MenuItemDesc:\"A crystal sugar candy\",\n        MenuItemPrice:\"10\",\n      },\n\n      {\n        MenuItemTitle:\"Taiyaki\",\n        MenuItemDesc:\"Fish shaped cake with a sweet filling\",\n        MenuItemPrice:\"60\",\n      },\n    ]);\n  },[])\n\n  let readyArray=menuListArray.map( menuItem=> (\n    <Box m={1} p={1} key={menuItem.MenuItemTitle} >\n  <MenuItem \n   MenuItemTitle={menuItem.MenuItemTitle}\n  MenuItemDesc={menuItem.MenuItemDesc}\n  MenuItemPrice={menuItem.MenuItemPrice} />\n   <hr/>\n  </Box>  ));\n\n\n   \n\n\n  return (\n    <Paper>\n          <Box width=\"70%\"  m={0.5} p={2} mx=\"10%\">\n\n      <Typography variant=\"h4\" component=\"h2\" align=\"center\">Menu</Typography>\n\n      <ul className={styles.MenuList}>\n        {readyArray}\n      </ul>\n\n      </Box>\n    </Paper>\n  \n  )\n};\n\nexport default Menu;\n","import { useContext } from \"react\";\n\nimport { CartInsideContext } from \"../../../../Context/cart-inside-context\";\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\n// import Button from \"../../../../UI/Button/Button\";\nimport { Typography, Button,ButtonGroup,IconButton } from \"@material-ui/core\";\n\nimport styles from \"./CartItemAdjust.module.css\";\n\nconst CartItemAdjust = (props) => {\n  const { cartMinusFunc, cartPlusFunc } = useContext(CartInsideContext);\n\n  const cartItemAdjustMinus = () => {\n    cartMinusFunc(props.cartItemKey);\n    return;\n  };\n\n  const cartItemAdjustPlus = () => {\n    cartPlusFunc(props.cartItemKey);\n    return;\n  };\n\n  return (\n    <ButtonGroup color=\"primary\">\n     {/* <div className={styles.CartItemAdjustBox}> */}\n      {/* <Button\n        styling={styles.MinusButton}\n        content=\"-\"\n        clickFunc={cartItemAdjustMinus}\n      ></Button>\n\n      <Button styling={styles.PlusButton} content=\"+\" clickFunc={cartItemAdjustPlus}></Button> */}\n      <IconButton\n        variant=\"outlined\"\n        onClick={cartItemAdjustMinus}\n        size=\"large\"\n        aria-label=\"Subtract Item From Cart\"\n      >\n       <RemoveIcon/>\n      </IconButton>\n\n      <IconButton\n        \n        onClick={cartItemAdjustPlus}\n        size=\"large\"\n        aria-label=\"Add Item to Cart\"\n      >\n        <AddIcon/>\n      </IconButton>\n      </ButtonGroup> \n  );\n};\n\nexport default CartItemAdjust;\n","import styles from './CartItem.module.css';\n\nimport CartItemAdjust from './CartItemAdjust/CartItemAdjust';\nimport {Card,CardContent, Typography,Grid,Box,useMediaQuery } from '@material-ui/core';\n\nconst CartItem = props =>{\n        \n    let isScreenBig = useMediaQuery('(min-width: 600px)');\n\n    let priceEachString=\"\";\n    let quantityString=\"\";\n    let totalPriceString=\"\";\n\n    if (isScreenBig){\n        priceEachString=`Price Each: PKR ${props.Price}`;\n        quantityString=` Quantity: ${props.Quantity}`;\n        totalPriceString= `Total Item Price: ${props.Price*props.Quantity}`;\n    }\n    else{\n        priceEachString=`Each:${props.Price}`;\n        quantityString=`Qty:${props.Quantity}`;\n        totalPriceString= `Item Total:${props.Price*props.Quantity}`;\n    }\n\n    return(\n        <Box m={1}>\n        <Card>\n            <CardContent>\n            <Grid container alignItems=\"center\" >\n\n        {/* <li className={styles.MenuItemContainer} > */}\n        <Grid item xs={7} sm={9}>\n        <Typography variant=\"h6\" component=\"h3\">{props.Name}</Typography>\n        </Grid>\n        <Grid item xs={5} sm={3} display=\"flex-end\" spacing={3}>\n        <CartItemAdjust cartItemKey={props.OrderNumber} /> \n        </Grid>\n\n        <Grid item xs={0} sm={2}>\n        </Grid>\n        <Grid item xs={7} sm={4}>\n        <Typography variant=\"body2\" component=\"h5\">{priceEachString}</Typography> \n        </Grid>\n        <Grid item xs={5} sm={6}>\n        <Typography variant=\"body2\" component=\"h5\" className={styles.QuantityBox}>{quantityString}</Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n        <Typography variant=\"subtitle2\" component=\"h4\">{totalPriceString}</Typography>\n        </Grid>\n\n\n        {/* <div className={styles.SpaceBox}/> */}\n        \n \n       \n       </Grid>\n       </CardContent>\n       \n       </Card>\n       </Box>\n        \n    )\n};\n\nexport default CartItem;","import React, { useContext } from \"react\";\n\n// import Card from \"../../UI/Card/Card\";\n\nimport {\n  Typography,\n  Card,\n  CardContent,\n  Paper,\n  Grid,\n  Box,\n  Button,\n  Modal,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nimport CartItem from \"./CartItem/CartItem\";\n\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\n// import Button from '../../UI/Button/Button';\n\nimport { CartContext } from \"../../Context/cart-triggered-context\";\nimport { CartInsideContext } from \"../../Context/cart-inside-context\";\n\nimport styles from \"./Cart.module.css\";\n\nconst CartCard = () => {\n  const { CartListArray, Total, orderSubmitFunc } =\n    useContext(CartInsideContext);\n\n  let CartList = CartListArray.map((cartItem) => (\n    <CartItem\n      OrderNumber={cartItem.OrderNumber}\n      key={cartItem.OrderNumber}\n      Name={cartItem.Name}\n      Quantity={cartItem.Quantity}\n      Price={cartItem.Price}\n    />\n  ));\n\n  return (\n    // <div className={styles.cartContainer}>\n    <Paper container>\n      <CardContent>\n        <Grid container justifyContent=\"space-around\" alignItems=\"center\">\n          {/* <Card cardWidth=\"40vw\" cardColor=\"peachpuff\"> */}\n          <Grid item xs={12}>\n            <Typography variant=\"h4\" component=\"h2\" align=\"center\">\n              Cart\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            {CartList}\n          </Grid>\n\n          <Grid item xs={3} sm={12} align=\"center\">\n            <Typography variant=\"h5\" component=\"h3\" >\n              Total: {Total}\n            </Typography>\n          </Grid>\n\n          {/* <Grid item xs={4}></Grid> */}\n          <Grid item xs={9} sm={12} align=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={orderSubmitFunc}\n              color=\"secondary\"\n              size=\"large\"\n            >\n              Submit Order\n            </Button>\n            {/* <Button content=\"Submit Order\" type=\"submit\" styling={styles.OrderSubmitButton} clickFunc={orderSubmitFunc}> </Button> */}\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Paper>\n    // </div>\n  );\n};\n\nconst Cart = () => {\n  \n  let isScreenBig = useMediaQuery('(min-width: 800px)');\n\n  let cartStyles= {};\n\n  if (isScreenBig){\n    cartStyles = {\n      position: \"fixed\",\n      top: \"2%\",\n      left: \"25%\",\n      width: \"50%\",\n    };}\n    else{\n      cartStyles ={\n        position: \"fixed\",\n        top: \"2%\",\n        left: \"10%\",\n        width: \"80%\",\n      }\n    }\n\n  const { cartStatus, setCartStatus } = useContext(CartContext);\n\n  // return (\n  //   <>\n  //     {cartStatus && (\n  //       <>\n  //         <Backdrop  btnClick={() => {  setCartStatus(false);  }} />\n  //         <CartCard />\n  //       </>\n  //     )}\n  //   </>\n  // );\n\n  return (\n    <>\n      {cartStatus && (\n        <Modal\n          style={cartStyles}\n          open={() => {\n            setCartStatus(true);\n          }}\n          onClose={() => {\n            setCartStatus(false);\n          }}\n        >\n          <CartCard />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Cart;\n","import {Paper,Typography,Grid} from \"@material-ui/core\"\nimport styles from './RestaurantDescription.module.css';\n\nimport {useMediaQuery} from \"@material-ui/core/\"\n\n\nconst RestaurantDescription =props => {\n\n    let isScreenBig =useMediaQuery('(min-width: 780px)');\n\n    return(\n        <>\n        {/* <Paper cardWidth=\"30vw\" cardColor=\"#A22A4A\" cardFontColor=\"whitesmoke\"> */\n        isScreenBig &&\n            <Paper>\n                 <Grid container justify=\"space-around\" alignItems=\"center\">\n                 <Typography variant=\"body1\" align=\"right\">ようこそ,本物の和菓子へ</Typography>\n                 </Grid>\n            </Paper>\n        }\n        </>\n    )\n}\n\nexport default RestaurantDescription;","import Header from \"./Components/Header/Header\";\nimport Menu from \"./Components/Menu/Menu\";\nimport Cart from \"./Components/Cart/Cart\";\nimport RestaurantDescription from \"./Components/RestaurantDescription/RestaurantDescription\";\nimport { Container, Box } from \"@material-ui/core\";\n\nimport CartContextProvider from \"./Context/cart-triggered-context\";\nimport CartInsideContextProvider from \"./Context/cart-inside-context\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    \n\n        <CartContextProvider>\n          <CartInsideContextProvider>\n          <Container>\n\n            <div className=\"App\">\n              <Cart />\n              <Header />\n              <RestaurantDescription />\n              <Menu />\n            </div>\n            </Container>\n    \n          </CartInsideContextProvider>\n        </CartContextProvider>\n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}