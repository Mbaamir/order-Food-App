{"version":3,"sources":["Context/cart-triggered-context.js","Components/Header/CartButton/CartButton.js","Context/theme-context.js","Components/Header/Header.js","Context/cart-inside-context.js","Components/Menu/MenuItem/MenuItemAdd/MenuItemAdd.js","Components/Menu/MenuItem/MenuItem.js","Components/Menu/Menu.js","Components/Cart/CartItem/CartItemAdjust/CartItemAdjust.js","Components/Cart/CartItem/CartItem.js","Components/Cart/CartSubmitCard/CartSubmitCard.js","Components/Cart/Cart.js","Components/RestaurantDescription/RestaurantDescription.js","App.js","reportWebVitals.js","index.js"],"names":["CartContext","React","createContext","cartStatus","setCartStatus","CartContextProvider","props","useState","cartValue","Provider","value","children","CartButton","cartCtx","useContext","Button","variant","color","onClick","size","startIcon","themeContext","isDark","setIsDark","DarkThemeProvider","isDarkState","setIsDarkState","newTheme","createMuiTheme","palette","type","themeValues","ThemeProvider","theme","Header","headerTitle","useMediaQuery","AppBar","position","Toolbar","Grid","container","alignItems","item","xs","sm","Typography","component","noWrap","FormControlLabel","control","Switch","checked","onChange","label","CartInsideContext","Total","CartListArray","setCartListArray","CurrentItem","setCurrentItem","addItemToCart","isError","isCartSubmit","setIsCartSubmit","setIsError","CartInsideContextProvider","totalState","setTotalState","cartListArrayState","setCartListArrayState","cartOrderNumberState","setCartOrderNumberState","cartSubmitState","setCartSubmitState","errorState","setErrorState","updateTotalFunc","newArray","newTotal","reduce","totalSum","Price","Quantity","cartInsideValues","setTotal","currentItemName","currentItemPrice","currentItemQuantity","existingCartEntry","find","Name","newQuantity","Number","newCartItem","OrderNumber","prevNumber","prevCartList","newCartlist","cartMinusFunc","itemOrderNumber","cartChangeIndex","findIndex","cartOrder","orderIndex","arrayCopy","clonedArray","JSON","parse","stringify","splice","console","log","cartPlusFunc","updateTotal","orderSubmitFunc","map","cartItem","MenuItemAdd","quantityRef","useRef","onSubmit","event","preventDefault","inputItemQuantity","current","MenuItemName","MenuItemPrice","TextField","id","InputProps","inputProps","min","max","InputLabelProps","shrink","inputRef","MenuItem","ListItem","MenuItemTitle","Hidden","smDown","MenuItemDesc","Menu","menuListArray","setMenuListArray","useEffect","PicAlt","PicSrc","readyArray","menuItem","Box","p","PicAltProp","PicSrcProp","Paper","width","mx","align","List","href","title","Dialog","open","onClose","DialogTitle","DialogContent","CartItemAdjust","ButtonGroup","IconButton","cartItemKey","aria-label","CartItem","priceEachString","quantityString","totalPriceString","m","Card","CardContent","display","spacing","CartSubmitCard","totalDisplay","OrderSubmitOutput","ListItemText","CartCard","CartList","justifyContent","Cart","cartStyles","top","left","overflow","Modal","style","RestaurantDescription","borderBottom","justify","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e13b5d22.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport const CartContext = React.createContext({\n  cartStatus: false,\n  setCartStatus: () => {},\n});\n\nconst CartContextProvider = (props) => {\n  const [cartTriggered, setCartTriggered] = useState(false);\n\n  const cartValue = {\n    cartStatus: cartTriggered,\n    setCartStatus: setCartTriggered,\n  };\n\n  return (\n    <CartContext.Provider value={cartValue}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartContextProvider;\n","import { useContext } from \"react\";\n\nimport { Button } from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nimport { CartContext } from \"../../../Context/cart-triggered-context\";\n\nconst CartButton = (props) => {\n  let cartCtx = useContext(CartContext);\n\n  function openCart() {\n    cartCtx.setCartStatus(true);\n  }\n\n  return (\n    // <Button content=\"Your Cart\" styling={styles.CartButtonBox} clickFunc={openCart} ></Button>\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={openCart}\n      size=\"large\"\n      startIcon={<ShoppingCartIcon />}\n    >\n      Your Cart\n    </Button>\n  );\n};\n\nexport default CartButton;\n","import React, { useState } from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nexport const themeContext = React.createContext({\n  isDark: 0,\n  setIsDark: () => {},\n});\n\nconst DarkThemeProvider = (props) => {\n  const [isDarkState, setIsDarkState] = useState(false);\n\n  const newTheme = createMuiTheme({\n    palette: {\n      type: isDarkState ? \"dark\" : \"light\",\n    },\n  });\n\n  const themeValues = {\n    isDark: isDarkState,\n    setIsDark: setIsDarkState,\n  };\n\n  return (\n    <themeContext.Provider value={themeValues}>\n      <ThemeProvider theme={newTheme}>{props.children}</ThemeProvider>\n    </themeContext.Provider>\n  );\n};\n\nexport default DarkThemeProvider;\n","import {\n  Toolbar,\n  Typography,\n  Grid,\n  Switch,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport { AppBar } from \"@material-ui/core\";\nimport CartButton from \"./CartButton/CartButton\";\n\nimport { themeContext } from \"../../Context/theme-context\";\nimport { useContext } from \"react\";\n\nconst Header = () => {\n  const { isDark, setIsDark } = useContext(themeContext);\n\n  let isScreenBig = useMediaQuery(\"(min-width: 800px)\");\n  let headerTitle = \"\";\n\n  if (isScreenBig) {\n    headerTitle = \"Amai: Authentic Japanese Sweets\";\n  } else {\n    headerTitle = \"Amai\";\n  }\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        {/* // <div className={styles.HeaderContainer}> */}\n        <Grid container alignItems=\"center\">\n          <Grid item xs={4} sm={7}>\n            <Typography variant=\"h4\" component=\"h1\" noWrap>\n              {headerTitle}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={5} sm={3}>\n            <CartButton />\n          </Grid>\n\n          <Grid item xs={3} sm={1}>\n            <FormControlLabel\n              control={\n                <Switch\n                  color=\"default\"\n                  checked={isDark}\n                  onChange={() => setIsDark(!isDark)}\n                />\n              }\n              label={isDark ? \"Dark Mode\" : \"Light Mode\"}\n            />\n          </Grid>\n        </Grid>\n        {/* <img src={DangoHeader} className={styles.HeaderImage} alt=\"\" /> */}\n        {/* </div> */}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n\nexport const CartInsideContext = React.createContext({\n  Total: 0,\n  CartListArray: [],\n  setCartListArray: () => {},\n  CurrentItem: {},\n  setCurrentItem: () => {},\n  addItemToCart: () => {},\n  isError: false,\n  isCartSubmit: false,\n  setIsCartSubmit: () => {},\n  setIsError: () => {},\n});\n\nconst CartInsideContextProvider = (props) => {\n  const [totalState, setTotalState] = useState(0);\n  const [cartListArrayState, setCartListArrayState] = useState([]);\n  const [cartOrderNumberState, setCartOrderNumberState] = useState(0);\n  const [cartSubmitState, setCartSubmitState] = useState(false);\n  const [errorState, setErrorState] = useState(false);\n\n  const addItemToCartFunc = (\n    currentItemName,\n    currentItemPrice,\n    currentItemQuantity\n  ) => {\n    if (currentItemQuantity < 1) {\n      return;\n    }\n\n    /**/\n    let existingCartEntry = cartListArrayState.find((item) => {\n      return item.Name === currentItemName;\n    });\n    if (existingCartEntry) {\n      let newQuantity =\n        Number(existingCartEntry.Quantity) + +currentItemQuantity;\n      if (newQuantity > 30) {\n        setErrorState(true);\n        return;\n      }\n      existingCartEntry.Quantity = newQuantity;\n      return;\n    }\n\n    //\n\n    const newCartItem = {\n      OrderNumber: cartOrderNumberState,\n      Name: currentItemName,\n      Price: currentItemPrice,\n      Quantity: currentItemQuantity,\n    };\n\n    setCartOrderNumberState((prevNumber) => {\n      return ++prevNumber;\n    });\n\n    setCartListArrayState((prevCartList) => {\n      let newCartlist = [...prevCartList, newCartItem];\n\n      updateTotalFunc(newCartlist);\n\n      return newCartlist;\n    });\n  };\n\n  const removeCartItem = (orderIndex, arrayCopy) => {\n    arrayCopy.splice(orderIndex, 1);\n\n    console.log(\"Array Edited\", arrayCopy);\n\n    return arrayCopy;\n  };\n\n  const decreaseCartItemQuantity = (itemOrderNumber) => {\n    let cartChangeIndex = cartListArrayState.findIndex(\n      (cartOrder) => cartOrder.OrderNumber === itemOrderNumber\n    );\n\n    setCartListArrayState((prevCartList) => {\n      let clonedArray = JSON.parse(JSON.stringify(prevCartList));\n      clonedArray[cartChangeIndex].Quantity--;\n\n      if (clonedArray[cartChangeIndex].Quantity < 1) {\n        updateTotalFunc(clonedArray);\n        return removeCartItem(cartChangeIndex, clonedArray);\n      } else {\n        updateTotalFunc(clonedArray);\n        return clonedArray;\n      }\n    });\n    return;\n  };\n\n  const increaseCartItemQuantity = (itemOrderNumber) => {\n    let cartChangeIndex = cartListArrayState.findIndex(\n      (cartOrder) => cartOrder.OrderNumber === itemOrderNumber\n    );\n\n    setCartListArrayState((prevCartList) => {\n      if (prevCartList[cartChangeIndex].Quantity >= 30) {\n        return prevCartList;\n      }\n      let clonedArray = JSON.parse(JSON.stringify(prevCartList));\n      clonedArray[cartChangeIndex].Quantity++;\n\n      updateTotalFunc(clonedArray);\n\n      return clonedArray;\n    });\n    return;\n  };\n\n  const updateTotalFunc = (newArray = cartListArrayState) => {\n    let newTotal = newArray.reduce((totalSum, item) => {\n      return totalSum + item.Price * item.Quantity;\n    }, 0);\n\n    setTotalState(newTotal);\n    return;\n  };\n\n  let printOrder = () => {\n    if (!totalState) return;\n    setCartSubmitState(true);\n    cartListArrayState.map((cartItem) =>\n      console.log(`You have ordered: ${cartItem.Quantity} ${cartItem.Name}`)\n    );\n    console.log(\"Your total cost is PKR \" + totalState);\n    console.log(\"Your order has been submitted\");\n  };\n\n  const cartInsideValues = {\n    Total: totalState,\n    setTotal: setTotalState,\n    CartListArray: cartListArrayState,\n    setCartListArray: setCartListArrayState,\n    addItemToCart: addItemToCartFunc,\n    cartMinusFunc: decreaseCartItemQuantity,\n    cartPlusFunc: increaseCartItemQuantity,\n    updateTotal: updateTotalFunc,\n    orderSubmitFunc: printOrder,\n    isCartSubmit: cartSubmitState,\n    setIsCartSubmit: setCartSubmitState,\n    isError: errorState,\n    setIsError: setErrorState,\n  };\n\n  return (\n    <CartInsideContext.Provider value={cartInsideValues}>\n      {props.children}\n    </CartInsideContext.Provider>\n  );\n};\n\nexport default CartInsideContextProvider;\n","import { useContext, useRef } from \"react\";\n\nimport { CartInsideContext } from \"../../../../Context/cart-inside-context\";\n\nimport { TextField, Button, Grid } from \"@material-ui/core\";\n\nconst MenuItemAdd = (props) => {\n  const { addItemToCart } = useContext(CartInsideContext);\n\n  const quantityRef = useRef();\n\n  const MenuItemAddFunc = (event) => {\n    event.preventDefault();\n\n    let inputItemQuantity = quantityRef.current.value;\n\n    addItemToCart(props.MenuItemName, props.MenuItemPrice, inputItemQuantity);\n    quantityRef.current.value = \"\";\n  };\n\n  return (\n    <form onSubmit={MenuItemAddFunc}>\n      <Grid container>\n        <Grid item xs={12}>\n          <TextField\n            id={\"quantity\" + props.MenuItemName}\n            type=\"number\"\n            InputProps={{ inputProps: { min: 1, max: 30 } }}\n            label=\"Amount: \"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n            inputRef={quantityRef}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <Button\n            id={\"button\" + props.MenuItemName}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            size=\"large\"\n          >\n            ADD\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default MenuItemAdd;\n","import MenuItemAdd from \"./MenuItemAdd/MenuItemAdd\";\n\nimport {\n  Typography,\n  Hidden,\n  Grid,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n} from \"@material-ui/core\";\n\n// import dangoPicture from \"../menuItemPics/192.png\";\n\nconst MenuItem = (props) => {\n  return (\n    <ListItem>\n      {/* <ListItemAvatar>\n                {/* <Avatar alt={props.PicAltProp} src={\"./192.png\"} /> */}\n      {/* </ListItemAvatar> */}\n      <Grid container>\n        <Grid item xs={10}>\n          <Grid container>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" component=\"h4\">\n                {props.MenuItemTitle}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Hidden smDown>\n                <Typography variant=\"caption\">{props.MenuItemDesc}</Typography>\n              </Hidden>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Typography variant=\"body1\" component=\"h5\">\n                PKR {props.MenuItemPrice}{\" \"}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={2}>\n          <MenuItemAdd\n            MenuItemName={props.MenuItemTitle}\n            MenuItemPrice={props.MenuItemPrice}\n          />\n        </Grid>\n      </Grid>\n    </ListItem>\n  );\n};\n\nexport default MenuItem;\n","import {\n  Typography,\n  Box,\n  Paper,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  List,\n} from \"@material-ui/core\";\nimport MenuItem from \"./MenuItem/MenuItem\";\n\nimport { CartInsideContext } from \"../../Context/cart-inside-context\";\nimport { useEffect, useState, useContext } from \"react\";\n\n// import dangoPicture from \"./menuItemPics/192.png\";\n\nconst Menu = () => {\n  const [menuListArray, setMenuListArray] = useState([]);\n  const { isError, setIsError } = useContext(CartInsideContext);\n\n  useEffect(() => {\n    setMenuListArray([\n      {\n        MenuItemTitle: \"Dango\",\n        MenuItemDesc:\n          \"a small, sticky, sweet dumpling, commonly skewered on a stick\",\n        MenuItemPrice: \"30\",\n        PicAlt: \"DangoPicture\",\n        PicSrc: \"192.png\",\n      },\n\n      {\n        MenuItemTitle: \"Konpeito\",\n        MenuItemDesc: \"A crystal sugar candy\",\n        MenuItemPrice: \"10\",\n        PicAlt: \"DangoPicture\",\n        PicSrc: \"192.png\",\n      },\n\n      {\n        MenuItemTitle: \"Taiyaki\",\n        MenuItemDesc: \"Fish shaped cake with a sweet filling\",\n        MenuItemPrice: \"60\",\n        PicAlt: \"DangoPicture\",\n        PicSrc: \"192.png\",\n      },\n    ]);\n  }, []);\n\n  let readyArray = menuListArray.map((menuItem) => (\n    <Box p={1} key={menuItem.MenuItemTitle}>\n      <MenuItem\n        MenuItemTitle={menuItem.MenuItemTitle}\n        MenuItemDesc={menuItem.MenuItemDesc}\n        MenuItemPrice={menuItem.MenuItemPrice}\n        PicAltProp={menuItem.PicAlt}\n        PicSrcProp={menuItem.PicSrc}\n      />\n      <hr />\n    </Box>\n  ));\n\n  return (\n    <Paper>\n      <Box width=\"70%\" p={2} mx=\"10%\">\n        <Typography variant=\"h4\" component=\"h2\" align=\"center\">\n          Menu\n        </Typography>\n\n        <List>{readyArray}</List>\n        <div>\n          Favicon made by{\" \"}\n          <a\n            href=\"https://www.flaticon.com/authors/smashicons\"\n            title=\"Smashicons\"\n          >\n            Smashicons\n          </a>{\" \"}\n          from{\" \"}\n          <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n            www.flaticon.com\n          </a>\n        </div>\n        <Dialog\n          open={isError}\n          onClose={() => {\n            setIsError(false);\n          }}\n        >\n          <DialogTitle>Error</DialogTitle>\n          <DialogContent>Amount of items in cart will exceed 30.</DialogContent>\n        </Dialog>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default Menu;\n","import { useContext } from \"react\";\n\nimport { CartInsideContext } from \"../../../../Context/cart-inside-context\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\n\nimport { ButtonGroup, IconButton } from \"@material-ui/core\";\n\nconst CartItemAdjust = (props) => {\n  const { cartMinusFunc, cartPlusFunc } = useContext(CartInsideContext);\n\n  const cartItemAdjustMinus = () => {\n    cartMinusFunc(props.cartItemKey);\n    return;\n  };\n\n  const cartItemAdjustPlus = () => {\n    cartPlusFunc(props.cartItemKey);\n    return;\n  };\n\n  return (\n    <ButtonGroup color=\"primary\">\n      <IconButton\n        onClick={cartItemAdjustMinus}\n        size=\"large\"\n        aria-label=\"Subtract Item From Cart\"\n      >\n        <RemoveIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={cartItemAdjustPlus}\n        size=\"large\"\n        aria-label=\"Add Item to Cart\"\n      >\n        <AddIcon />\n      </IconButton>\n    </ButtonGroup>\n  );\n};\n\nexport default CartItemAdjust;\n","import CartItemAdjust from \"./CartItemAdjust/CartItemAdjust\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Box,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nconst CartItem = (props) => {\n  let isScreenBig = useMediaQuery(\"(min-width: 600px)\");\n\n  let priceEachString = \"\";\n  let quantityString = \"\";\n  let totalPriceString = \"\";\n\n  if (isScreenBig) {\n    priceEachString = `Price Each: PKR ${props.Price}`;\n    quantityString = ` Quantity: ${props.Quantity}`;\n    totalPriceString = `Total Item Price: ${props.Price * props.Quantity}`;\n  } else {\n    priceEachString = `Each:${props.Price}`;\n    quantityString = `Qty:${props.Quantity}`;\n    totalPriceString = `Item Total:${props.Price * props.Quantity}`;\n  }\n\n  return (\n    <Box m={1}>\n      <Card>\n        <CardContent>\n          <Grid container alignItems=\"center\">\n            {/* <li className={styles.MenuItemContainer} > */}\n            <Grid item xs={7} sm={9}>\n              <Typography variant=\"h6\" component=\"h3\">\n                {props.Name}\n              </Typography>\n            </Grid>\n            <Grid item xs={5} sm={3} display=\"flex-end\" spacing={3}>\n              <CartItemAdjust cartItemKey={props.OrderNumber} />\n            </Grid>\n\n            <Grid item xs={0} sm={2}></Grid>\n            <Grid item xs={7} sm={4}>\n              <Typography variant=\"body2\" component=\"h5\">\n                {priceEachString}\n              </Typography>\n            </Grid>\n            <Grid item xs={5} sm={6}>\n              <Typography variant=\"body2\" component=\"h5\">\n                {quantityString}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle2\" component=\"h4\">\n                {totalPriceString}\n              </Typography>\n            </Grid>\n\n            {/* <div className={styles.SpaceBox}/> */}\n          </Grid>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default CartItem;\n","import { useContext } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  DialogContent,\n} from \"@material-ui/core\";\n\nimport { CartInsideContext } from \"../../../Context/cart-inside-context\";\n\nconst CartSubmitCard = (props) => {\n  const {\n    isCartSubmit,\n    setIsCartSubmit,\n    CartListArray,\n    setCartListArray,\n    Total,\n    setTotal,\n  } = useContext(CartInsideContext);\n\n  let totalDisplay = Total;\n  let OrderSubmitOutput = CartListArray.map((cartItem) => (\n    <ListItem>\n      <ListItemText>\n        {`You have ordered: ${cartItem.Quantity} ${cartItem.Name}`}\n      </ListItemText>\n    </ListItem>\n  ));\n\n  return (\n    <Dialog\n      //  style={ cartSubmitStyles }\n      open={isCartSubmit}\n      onClose={() => {\n        setIsCartSubmit(false);\n        setTotal(0);\n        setCartListArray([]);\n      }}\n    >\n      <DialogTitle>Order Details</DialogTitle>\n      <DialogContent>\n        <List>\n          {OrderSubmitOutput}\n          <hr />\n        </List>\n\n        <Typography variant=\"h6\">\n          {\"Your total cost is PKR \" + totalDisplay}\n          <hr />\n        </Typography>\n\n        <Typography variant=\"overline\">\n          Your order has been submitted\n          <hr />\n        </Typography>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default CartSubmitCard;\n","import React, { useContext } from \"react\";\n\n// import Card from \"../../UI/Card/Card\";\n\nimport {\n  Typography,\n  CardContent,\n  Paper,\n  Grid,\n  Button,\n  Modal,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nimport CartItem from \"./CartItem/CartItem\";\nimport CartSubmitCard from \"./CartSubmitCard/CartSubmitCard\";\n\nimport { CartContext } from \"../../Context/cart-triggered-context\";\nimport { CartInsideContext } from \"../../Context/cart-inside-context\";\n\nconst CartCard = () => {\n  const { CartListArray, Total, orderSubmitFunc } =\n    useContext(CartInsideContext);\n\n  let CartList = CartListArray.map((cartItem) => (\n    <CartItem\n      OrderNumber={cartItem.OrderNumber}\n      key={cartItem.OrderNumber}\n      Name={cartItem.Name}\n      Quantity={cartItem.Quantity}\n      Price={cartItem.Price}\n    />\n  ));\n\n  return (\n    // <div className={styles.cartContainer}>\n    <Paper container>\n      <CardContent>\n        <Grid container justifyContent=\"space-around\" alignItems=\"center\">\n          {/* <Card cardWidth=\"40vw\" cardColor=\"peachpuff\"> */}\n          <Grid item xs={12}>\n            <Typography variant=\"h4\" component=\"h2\" align=\"center\">\n              Cart\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            {CartList}\n          </Grid>\n\n          <Grid item xs={3} sm={12} align=\"center\">\n            <Typography variant=\"h5\" component=\"h3\">\n              Total: {Total}\n            </Typography>\n          </Grid>\n\n          {/* <Grid item xs={4}></Grid> */}\n          <Grid item xs={9} sm={12} align=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={orderSubmitFunc}\n              color=\"secondary\"\n              size=\"large\"\n            >\n              Submit Order\n            </Button>\n            {/* <Button content=\"Submit Order\" type=\"submit\" styling={styles.OrderSubmitButton} clickFunc={orderSubmitFunc}> </Button> */}\n            {/* <CartSubmitCard/>/ */}\n          </Grid>\n        </Grid>\n      </CardContent>\n\n      <CartSubmitCard />\n    </Paper>\n\n    // </div>\n  );\n};\n\nconst Cart = () => {\n  let isScreenBig = useMediaQuery(\"(min-width: 900px)\");\n\n  let cartStyles = {};\n\n  if (isScreenBig) {\n    cartStyles = {\n      position: \"fixed\",\n      top: \"2%\",\n      left: \"25%\",\n      width: \"50%\",\n      overflow: \"auto\",\n    };\n  } else {\n    cartStyles = {\n      position: \"fixed\",\n      top: \"2%\",\n      left: \"10%\",\n      width: \"80%\",\n      overflow: \"auto\",\n    };\n  }\n\n  const { cartStatus, setCartStatus } = useContext(CartContext);\n\n  return (\n    <Modal\n      style={cartStyles}\n      open={cartStatus}\n      onClose={() => {\n        setCartStatus(false);\n      }}\n    >\n      <CartCard />\n    </Modal>\n  );\n};\nexport default Cart;\n","import { Paper, Typography, Grid, Hidden, Box } from \"@material-ui/core\";\n\nconst RestaurantDescription = (props) => {\n  return (\n    <Hidden smDown>\n      <Paper>\n        <Box borderBottom={1}>\n          <Grid container justify=\"space-around\" alignItems=\"center\">\n            <Typography variant=\"body1\" align=\"right\">\n              ようこそ,本物の和菓子へ\n            </Typography>\n          </Grid>\n        </Box>\n      </Paper>\n    </Hidden>\n  );\n};\nexport default RestaurantDescription;\n","import Header from \"./Components/Header/Header\";\nimport Menu from \"./Components/Menu/Menu\";\nimport Cart from \"./Components/Cart/Cart\";\nimport RestaurantDescription from \"./Components/RestaurantDescription/RestaurantDescription\";\nimport { Container } from \"@material-ui/core\";\n\nimport CartContextProvider from \"./Context/cart-triggered-context\";\nimport CartInsideContextProvider from \"./Context/cart-inside-context\";\nimport DarkThemeProvider from \"./Context/theme-context\";\n\nfunction App() {\n  return (\n    <CartContextProvider>\n      <CartInsideContextProvider>\n        <DarkThemeProvider>\n          <Container>\n            <Cart />\n            <Header />\n            <RestaurantDescription />\n            <Menu />\n          </Container>\n        </DarkThemeProvider>\n      </CartInsideContextProvider>\n    </CartContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}